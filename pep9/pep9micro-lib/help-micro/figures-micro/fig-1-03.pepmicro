// File: FILE
// BOOK NAME
// FIGURE NAME
// Two-byte data bus
// Demonstrate the ability of programs to be interleaved in 
// arbitary order with gotos.
// Fetch the instruction specifier and increment PC by 1
// Assume: PC is even and pre-fetch the next byte

UnitPre: IR=0x000000, PC=0x00FE, Mem[0x00FE]=0xABCD, S=1
UnitPost: IR=0xAB0000, PC=0x00FF, T1=0xCD

// MAR <- PC.
l1: A=6, B=7, MARMux=1; MARCk; goto l2
// IR <- MDREven, T1 <- MDROdd.
l4: MemRead, MDREMux=0, MDROMux=0; MDRECk, MDROCk; goto l5
l5: EOMux=0, AMux=0, ALU=0, CMux=1, C=8; LoadCk; goto l6

l6: EOMux=1, AMux=0, ALU=0, CMux=1, C=11; LoadCk; stopCPU
l3: MemRead, A=6, B=22, AMux=1, CSMux=1, ALU=2, CMux=1, C=6; LoadCk; goto l4
// Initiate fetch, PC <- PC + 1.
l2: MemRead, A=7, B=23, AMux=1, ALU=1, CMux=1, C=7; SCk, LoadCk; goto l3




